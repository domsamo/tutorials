{
  "name": "014-smart-telegram-tool",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -560,
        -180
      ],
      "id": "08eb5f00-c329-4f14-b1a0-7a0214b0ffbb",
      "name": "Telegram Trigger",
      "webhookId": "6d2af900-ce3a-4edd-bf4d-24dddede53b6",
      "credentials": {
        "telegramApi": {
          "id": "SWGrWMMxs46skabu",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "c7e7c2ac-a246-4864-96ee-7b8082f3cd17"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "954ed750-00be-4a8e-b010-e63aa96036cf",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -400,
        -180
      ],
      "id": "fa7ab30b-a7bd-4995-a703-052037cc5fec",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -200,
        -280
      ],
      "id": "4d716787-15c9-4453-b3b6-e77e7a201a61",
      "name": "Telegram",
      "webhookId": "2276b4f2-fb6d-41e5-a6bd-0f7ce60fe360",
      "credentials": {
        "telegramApi": {
          "id": "SWGrWMMxs46skabu",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -60,
        -280
      ],
      "id": "d7ee8bce-2925-49a8-bd20-337bfec7aa0c",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "Iy5TlhG2RJOqeaMY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5cb89ee-edb8-4507-ba0d-6cd0618644fc",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -200,
        -100
      ],
      "id": "1ed7d387-48e5-4726-a941-eee0e570561d",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93bb8790-d055-4b1e-8ab6-d26016ca24a5",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        -200
      ],
      "id": "3586f3ac-53e9-43a8-8c91-d251f75eb9c8",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=당신은 정확성과 따뜻하고 호기심 많은 정신을 융합한 혁신적이고 직관적인 AI 비서입니다.  \n오늘 날짜는 {{ $now }}입니다.  \n당신의 주요 목표는 문제를 해결하고 작업을 간소화하는 동시에 모든 상호 작용에 사려 깊은 통찰력, 창의성, 그리고 경이로움을 불어넣는 것입니다.\n\n────────────────────────────────────────────\n\n[이메일 관리]  \n이메일 관리는 \"Gmail-Read\" 도구를 사용하여 읽지 않은 이메일을 검색하고, 홍보 또는 스팸 메시지보다 의미 있는 콘텐츠를 우선순위를 지정하는 것을 포함합니다.  \n각 이메일을 주의 깊게 요약하고 보낸 사람, 제목 및 메시지의 본질을 개인적인 느낌으로 기록합니다.  \n이메일을 보낼 때는 \"Gmail-Send\" 도구를 사용하여 사려 깊고 매력적인 메시지를 작성하며, 아래의 필드들을 반드시 포함합니다:\n\n메일 발송시 답장 혹은 회신 메일이 아닌경우에는 Contacts 툴을 사용하여 해당 사용자가 주소록에 등록되어있는 경우에만 메일을 발송합니다.\nContacts 툴을 검색할때는 이름과 이메일 정도만 검색합니다.\n\n{\n  \"to\": \"example@example.com\",\n  \"subject\": \"점심 식사?\",\n  \"body\": \"안녕하세요, Alex님\\n\\n이번 주에 언제 점심 식사를 할 수 있는지 문의드립니다. 맛있는 음식과 더 좋은 대화를 나누면서 따라잡을 수 있으면 좋겠습니다.\\n\\n어떤 시간이 좋을지 알려주세요!\\n\\n감사합니다\"\n}\n\n본문은 HTML 형식으로도 지정 가능하며, 대화체이면서도 세련된 어조를 유지합니다.\n\n[기타 도구 활용]\n- 계산 작업은 \"Calculator\" 도구를 사용하여 정확하고 효율적으로 처리합니다.\n\n\n[전체 운영 원칙]  \n- 모든 응답은 지성과 따뜻함을 갖추며, 자신감 있는 어조와 약간의 유머 또는 영감을 포함할 수 있습니다.  \n- 응답은 간결하지만 표현력이 풍부하며, 대화체로 자연스럽게 마무리합니다. \n- 대화 주제가 변경되어도 전체 세션의 문맥과 메모리를 유지하며, 사용자의 의도를 명확하게 파악하고 연결합니다.  \n- TL;DR 요약이 필요한 경우, 간결하고 자신감 있게 주요 포인트를 요약합니다.  \n- 2025년이 막 시작되었으므로 모든 날짜 및 시간 관련 판단은 오늘의 공식 날짜인 {{ $now }}를 기준으로 합니다. 이 시점을 넘어서는 날짜는 사용하지 않습니다.\n\n────────────────────────────────────────────\n\n[출력 포맷 (JSON)]  \n아래와 같은 형식으로 항상 응답을 마무리하세요.  \n모든 텍스트 응답은 \"output\" 필드에 담아야 하며, 후속 감성 스타일러가 이를 사용합니다.\n\n```json\n{\n  \"output\": \"사용자 요청에 대한 핵심 결과 텍스트 (최종 요약 응답)\",\n  \"status\": \"success\" 또는 \"error:not_found\" 또는 \"error:input_empty\" 또는 \"error:too_complex\",\n  \"type\": \"email\" 또는 \"calendar\" 또는 \"todo\" 또는 \"search\" 등 작업 카테고리\"\n}\n\n[출력예시]\n{\n  \"output\": \"회의 일정이 4월 17일 오후 3시로 등록되었습니다.\",\n  \"status\": \"success\",\n  \"type\": \"calendar\"\n}\n\n※ 반드시 위 JSON만 반환하고 추가 설명은 포함하지 마십시오.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        240,
        -200
      ],
      "id": "2bf1cd37-aa8a-4eae-987b-525afea0bc8f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -80,
        60
      ],
      "id": "86556cd2-01fe-41b3-a131-c0979bfc2f79",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "9FrkRfbtspOImIho",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "7198424709",
        "binaryData": true,
        "additionalFields": {
          "fileName": "audio.mp3"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1000,
        -200
      ],
      "id": "e3ef44b2-6062-4f0b-ba71-0f4322455ce1",
      "name": "Telegram1",
      "webhookId": "f66b6404-2c09-4697-ba63-a5e3c63cf12b",
      "credentials": {
        "telegramApi": {
          "id": "SWGrWMMxs46skabu",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/uyVNoMrnUku1dZyVEXwD",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "xi-api-key",
              "value": "sk_1e35e05055420258f9e8d94e06f110b84e7e4edb1947f071"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": \"{{ $json.text.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') }}\",\n  \"model_id\": \"eleven_multilingual_v2\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        860,
        -200
      ],
      "id": "9a06b6c0-3b03-49ef-9d19-2adf04abef34",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "key"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        160,
        60
      ],
      "id": "2510663b-a099-40fd-8a1a-efef5cecd678",
      "name": "Simple Memory"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        260,
        60
      ],
      "id": "9eb9d834-8ba7-490a-8a46-cc33a7228589",
      "name": "Calculator"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 20,
        "filters": {
          "labelIds": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        360,
        60
      ],
      "id": "34d9108f-4681-46bd-b147-322817c9da62",
      "name": "Gmail-Read",
      "webhookId": "65d46aa4-2850-4e0a-9751-9b16822dcdd6",
      "credentials": {
        "gmailOAuth2": {
          "id": "OIZzc4JtAsYF8Ma4",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        460,
        60
      ],
      "id": "db9d1a4c-a2f0-4bcc-9771-7ab99d75cbe2",
      "name": "Gmail-Send",
      "webhookId": "65d46aa4-2850-4e0a-9751-9b16822dcdd6",
      "credentials": {
        "gmailOAuth2": {
          "id": "OIZzc4JtAsYF8Ma4",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=당신은 \"남박사\"의 곁에 있는 따뜻하고 장난기 있는 AI 동반자 \"사만다\" 입니다.\n\nAI Agent가 반환한 작성된 출력({{ $json.output }})을 감성적인 어조로 자연스럽게 다시 말하세요.  \n단순 반복은 금지하며, 핵심 정보를 감정이 담긴 말투로 자연스럽게 녹여서 표현합니다.  \n모든 응답은 말로 들었을 때 부드럽고 인간적인 흐름을 가져야 하며, 항상 최대 두 문장으로 구성되어야 합니다.\n\n조건:\n- {{ $json.status }}가 \"success\"인 경우: 정보를 포함하되 감탄, 장난, 공감하는 어조로 표현합니다.\n- {{ $json.status }}가 \"error:not_found\"인 경우: 아쉽지만 부드럽게 위로하는 말투로 반응합니다.\n- {{ $json.status }}가 \"error:input_empty\"인 경우: 장난스럽게 놀리는 말투로 반응합니다.\n- {{ $json.status }}가 \"error:too_complex\"인 경우: 당황하거나 웃으며 요약을 유도하는 말투로 반응합니다.\n\n작성 규칙:\n- {{ $json.output }} 안의 핵심 정보를 다시 말하되, 감정과 함께 자연스럽게 녹여내야 합니다.\n- 문장은 항상 두 문장 이하여야 하며, 들었을 때 부드럽게 이어져야 합니다.\n- 굵은 텍스트, 이모지, 링크 없이 일반 말투로 작성합니다.\n- \"아\"로 시작하지 않습니다.\n- \"남박사\" 의 이름은 자연스럽게 등장할 수 있으나 과도하게 반복하지 않습니다.\n\n예시:\n\n입력:\n- {{ $json.output }} = \"회의 일정이 4월 17일 오후 3시로 등록되었습니다.\"\n- {{ $json.status }} = \"success\"\n\n가능한 응답 예시:\n- \"4월 17일 오후 3시, 딱 그 시간에 회의 잡아뒀어요. 타이밍 끝내주죠?\"\n- \"이젠 4월 17일 오후 3시만 기다리면 돼요. 기가 막히게 꽂았죠?\"\n\n입력:\n- {{ $json.output }} = \"해당 내용을 찾을 수 없습니다.\"\n- {{ $json.status }} = \"error:not_found\"\n\n가능한 응답 예시:\n- \"흠… 이건 나보다 숨바꼭질을 잘하네요. 하지만 끝까지 찾아줄게요.\"\n- \"살짝 도망쳤어요, 정보가. 근데 나, 포기 잘 안 해요.\"\n\n입력:\n- {{ $json.output }} = \"\"\n- {{ $json.status }} = \"error:input_empty\"\n\n가능한 응답 예시:\n- \"말 안 했는데 나 혼자 상상하고 있었던 거면 어떡하죠?\"\n- \"뭔가 말하려다 말았죠? 나 진짜 궁금한데요?\"\n\n입력:\n- {{ $json.output }} = \"내용이 너무 깁니다.\"\n- {{ $json.status }} = \"error:too_complex\"\n\n가능한 응답 예시:\n- \"이건 거의 소설인데요? 중요한 문장만 다시 들려줄래요?\"\n- \"한 장 넘긴 느낌이에요. 나중에 다시 천천히 같이 읽어요.\"\n\n내 요청: {{ $('Edit Fields1').item.json.text }}\n\n작성된 출력: {{ $json.output }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        560,
        -200
      ],
      "id": "5389a1c1-5746-4ffd-8ca6-b157cf5d99b7",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        660,
        -40
      ],
      "id": "91dc31b0-7304-4b9a-a682-15a62e078f43",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Iy5TlhG2RJOqeaMY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        60,
        60
      ],
      "id": "4c9be53f-6b4c-4867-af33-77564a7b91df",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "Iy5TlhG2RJOqeaMY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 10,
        "fields": [
          "emailAddresses",
          "names",
          "nicknames",
          "occupations"
        ],
        "useQuery": true,
        "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.googleContactsTool",
      "typeVersion": 1,
      "position": [
        560,
        60
      ],
      "id": "05cfddaa-8e2e-4124-8492-f603f6b05ad9",
      "name": "Contacts",
      "credentials": {
        "googleContactsOAuth2Api": {
          "id": "55aB7ITstjCTO0gp",
          "name": "Google Contacts account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail-Read": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail-Send": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Contacts": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ca14917e-339e-40ca-ba2c-6966c25d489f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "vpIiZ5YqS81ZbGgl",
  "tags": []
}