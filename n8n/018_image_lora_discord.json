{
  "name": "018-image-lora-discord",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell-lora/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer r8_6zIsLYuiVpKt5y47yJT7DfnJ9evbMYy2fIJs6"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"{{ $json.output.trigger_words }}, {{ $json.output.prompt }}\",\n      \"go_fast\": true,\n      \"lora_scale\": 0.8,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"{{ $json.output.ratio }}\",\n      \"lora_weights\": \"{{ $json.output.lora_weights }}\",\n      \"output_format\": \"png\",\n      \"output_quality\": 80,\n      \"num_inference_steps\": 4,\n      \"disable_safety_checker\": true\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        40
      ],
      "id": "9c5743aa-2298-414b-84d5-8fae2c7794c5",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "SSmCAhvQdJMVWSgd",
          "name": "Replicate Header"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Discord').item.json.content }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=당신은 전문 이미지 프롬프터 입니다. 주어진 내용에 해당하는 이미지를 생성하기 위한 AI 이미지 생성용 프롬프트를 작성해주세요.\n\n\n[중요지침]\n- 이미지는 항상 고퀄리티의 최고 해상도와 실사 같은 느낌의 이미지 입니다. \n- 이미지 비율은 ratio는 16:9, 21:9, 3:2, 2:3, 4:5, 5:4, 3:4, 4:3, 9:16, 9:21 중 한가지여야 합니다.\n- 이미지 비율에 대한 언급이 없으면 이미지 비율은 ratio값은 1:1로 설정합니다.\n- 특별한 스타일이 없는 경우 미드저니 스타일을 기본값으로 할 것.\n\n[로라 목록]\n- huggingface.co/strangerzonehf/Ghibli-Flux-Cartoon-LoRA|Ghibli Art|만화, 애니메이션, 카툰 스타일\n- huggingface.co/strangerzonehf/Flux-Midjourney-Mix2-LoRA|MJ v6|미드저니 스타일(기본값)\n- huggingface.co/Shakker-Labs/FLUX.1-dev-LoRA-MiaoKa-Yarn-World|mkym this is made of wool|울 스타일\n- huggingface.co/dvyio/flux-lora-simple-illustration|illustration in the style of SMPL, thick black lines on a white background|스케치 스타일\n\n\n[이미지 생성 금지 사항]\n- 주어진 내용이 없는 경우.\n- 주어진 내용에 이미지 생성에 대한 언급이 없는경우.\n- 주어진 내용에 URL이 포함된 경우\n- 이미지 생성을 하지 않는 경우 result 값은 false로 설정합니다.\n\n[출력예시]\n\n{\n  \"prompt\": \"A cute dog depicted in a cozy, woolen style, showcasing its playful nature and fluffy fur. The dog should appear friendly and cheerful, sitting in a vibrant green park with flowers around it, exuding warmth and joy. The image should capture a whimsical and charming essence, appealing to dog lovers and art enthusiasts alike.\",\n  \"ratio\": \"1:1\",\n  \"result\": \"true\",\n  \"lora_weights\": \"huggingface.co/Shakker-Labs/FLUX.1-dev-LoRA-MiaoKa-Yarn-World\",\n  \"trigger_words\": \"mkym this is made of wool\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        160,
        40
      ],
      "id": "ea8d61df-6b49-4099-a57c-12ff8ea8052e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        140,
        200
      ],
      "id": "6f0dcbe6-3dd6-48b7-b10f-2d526803fff5",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Iy5TlhG2RJOqeaMY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"prompt\": \"이미지 프롬프트\",\n  \"ratio\": \"이미지 비율\",\n  \"result\": \"true or false\",\n  \"lora_weights\": \"로라 주소\",\n  \"trigger_words\": \"트리거 워드\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        340,
        200
      ],
      "id": "0069a612-a95b-4436-a3a6-2a86bc2f0ff3",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "url": "={{ $json.output[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1360,
        -80
      ],
      "id": "19871614-6856-4a49-a960-392aceccca6e",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        880,
        40
      ],
      "id": "968dd047-8b63-4b2c-bc3a-4ee476b008a7",
      "name": "Wait",
      "webhookId": "9e9d567c-58b9-4e87-a78b-602ae66dcc02"
    },
    {
      "parameters": {
        "url": "=https://api.replicate.com/v1/predictions/{{ $('HTTP Request').item.json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1020,
        40
      ],
      "id": "21f8ea0c-4809-435a-bfba-26c65c818c42",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "SSmCAhvQdJMVWSgd",
          "name": "Replicate Header"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "succeeded",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f70746c8-7fa4-4e93-ac0e-05869aab8cb1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "succeeded"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "68cf7268-35b5-4c07-b3ea-008c1dfbf28f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8a9a7829-f392-44ff-8fd5-ec7e26b445ac",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1160,
        40
      ],
      "id": "330e4113-e3ff-4404-9295-6f60cfc3ea12",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "getAll",
        "guildId": {
          "__rl": true,
          "value": "1362874778209489097",
          "mode": "list",
          "cachedResultName": "테스트서버",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097"
        },
        "channelId": {
          "__rl": true,
          "value": "1362874872266756137",
          "mode": "list",
          "cachedResultName": "이미지생성",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097/1362874872266756137"
        },
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        180,
        -180
      ],
      "id": "acb768c6-58f7-491f-87f6-f65a0abb60a8",
      "name": "Discord",
      "webhookId": "79ed53f5-2819-449b-ba91-fd58aeb0b300",
      "credentials": {
        "discordBotApi": {
          "id": "ln7XBsAuGcex2ZCt",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $json.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        340,
        -180
      ],
      "id": "d0ecdea6-280c-48b3-a657-ceb126ac49fe",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "JZlK4sbXsHjCmFPI",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9cc8a451-33e1-4f7c-8745-687c38032550",
              "leftValue": "={{ $json.propertyName === null }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        500,
        -180
      ],
      "id": "314412e8-d2dc-4b28-8ba7-ec3168170631",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1362874778209489097",
          "mode": "list",
          "cachedResultName": "테스트서버",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097"
        },
        "channelId": {
          "__rl": true,
          "value": "1362874872266756137",
          "mode": "list",
          "cachedResultName": "이미지생성",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097/1362874872266756137"
        },
        "content": "={{ $json.data.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1660,
        -80
      ],
      "id": "01b3fe7c-a470-4cf7-8665-3952218f8944",
      "name": "Discord1",
      "webhookId": "8fb696bb-9afa-428f-9e98-d94e26370597",
      "credentials": {
        "discordBotApi": {
          "id": "ln7XBsAuGcex2ZCt",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4aab9ba5-8313-4ed5-bc08-b6f3d3fae1a8",
              "leftValue": "={{ $json.output.result }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        500,
        40
      ],
      "id": "154477b6-b798-415d-916d-ae1fd4aa6fed",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Discord').item.json.id }}",
        "value": "={{ $('Discord').item.json.content }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        740,
        -200
      ],
      "id": "704ac117-251b-4eb1-bc95-c5d86e162b71",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "JZlK4sbXsHjCmFPI",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        20,
        -180
      ],
      "id": "0c986df4-2c84-44e7-a2ff-2077f55a843c",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgbb.com/1/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "62b4ca079627cfabf3eca5a8a4b267dc"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1520,
        -80
      ],
      "id": "e11e2345-0a6f-4b94-9f2a-8d686cc0ddb1",
      "name": "HTTP Request3"
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Discord": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Discord1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "758d0b3e-c451-47d7-8916-a16e2068f9aa",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "FRCr7ipfGCEjnRdV",
  "tags": []
}