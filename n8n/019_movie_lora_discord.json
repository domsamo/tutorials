{
  "name": "019-movie-lora-discord",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell-lora/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer r8_6zIsLYuiVpKt5y47yJT7DfnJ9evbMYy2fIJs6"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"{{ $json.output.trigger_words }}, {{ $json.output.prompt }}\",\n      \"go_fast\": true,\n      \"lora_scale\": 0.8,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"{{ $json.output.ratio }}\",\n      \"lora_weights\": \"{{ $json.output.lora_weights }}\",\n      \"output_format\": \"png\",\n      \"output_quality\": 80,\n      \"num_inference_steps\": 4,\n      \"disable_safety_checker\": true\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        40
      ],
      "id": "28630882-3a0a-4e3b-8f41-584855e7c449",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "SSmCAhvQdJMVWSgd",
          "name": "Replicate Header"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Discord').item.json.content }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=당신은 전문 이미지 프롬프터 입니다. 주어진 내용에 해당하는 이미지를 생성하기 위한 AI 이미지 생성용 프롬프트를 작성해주세요.\n\n\n[중요지침]\n- 이미지는 항상 고퀄리티의 최고 해상도와 실사 같은 느낌의 이미지 입니다. \n- 이미지 비율은 ratio는 16:9, 21:9, 3:2, 2:3, 4:5, 5:4, 3:4, 4:3, 9:16, 9:21 중 한가지여야 합니다.\n- 이미지 비율에 대한 언급이 없으면 이미지 비율은 ratio값은 1:1로 설정합니다.\n- 특별한 스타일이 없는 경우 미드저니 스타일을 기본값으로 할 것.\n\n[로라 목록]\n- huggingface.co/strangerzonehf/Ghibli-Flux-Cartoon-LoRA|Ghibli Art|만화, 애니메이션, 카툰 스타일\n- huggingface.co/strangerzonehf/Flux-Midjourney-Mix2-LoRA|MJ v6|미드저니 스타일(기본값)\n- huggingface.co/Shakker-Labs/FLUX.1-dev-LoRA-MiaoKa-Yarn-World|mkym this is made of wool|울 스타일\n- huggingface.co/dvyio/flux-lora-simple-illustration|illustration in the style of SMPL, thick black lines on a white background|스케치 스타일\n\n[영상 제작]\n- 영상 제작을 요청한 경우 movie_make 값은 true 로 설정합니다.\n- 영상 제작 요청시 해당 영상이 어떻게 움직일지를 상상하여 movie_prompt를 영문으로 작성합니다.\n- movie_prompt 작성시 움직임을 중점적으로 설명합니다.\n- AI 영상 제작의 한계로 복잡한 움직임보다는 단순한 움직임을 사용하는게 좋습니다.\n\n[이미지 생성 금지 사항]\n- 주어진 내용이 없는 경우.\n- 주어진 내용에 이미지 생성에 대한 언급이 없는경우.\n- 주어진 내용에 URL이 포함된 경우\n- 이미지 생성을 하지 않는 경우 result 값은 false로 설정합니다.\n\n[출력예시]\n\n{\n  \"prompt\": \"A cartoon-style scene depicting a cute dog wearing sunglasses while having fun swimming in a bright blue pool. The dog should be splashing water playfully, with a big smile on its face, surrounded by colorful beach toys and bright summer elements like palm trees and a sunny sky. The image should evoke a sense of joy and relaxation, appealing to dog lovers and cartoon enthusiasts alike.\",\n  \"ratio\": \"16:9\",\n  \"result\": \"true\",\n  \"lora_weights\": \"huggingface.co/strangerzonehf/Ghibli-Flux-Cartoon-LoRA\",\n  \"trigger_words\": \"Ghibli Art\",\n  \"movie_make\": \"true\",\n  \"movie_prompt\": \"The scene starts with the dog diving into the pool, creating a splash, then cuts to a close-up of its joyous face as water drips from its sunglasses. The camera then pans around to showcase the pool area filled with vibrant colors and summer fun, highlighting the dog's playful swimming and occasional jumps out of the water.\"\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        160,
        40
      ],
      "id": "d28d07e3-43ae-4d16-ad61-d978387f2303",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        140,
        200
      ],
      "id": "eee0e1dc-82dd-4a3f-90c2-c606103fcf10",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Iy5TlhG2RJOqeaMY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"prompt\": \"이미지 프롬프트\",\n  \"ratio\": \"이미지 비율\",\n  \"result\": \"true or false\",\n  \"lora_weights\": \"로라 주소\",\n  \"trigger_words\": \"트리거 워드\",\n  \"movie_make\": \"true or false\",\n  \"movie_prompt\": \"영상용 프롬프트\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        340,
        200
      ],
      "id": "eea7121a-9250-48ba-8ce9-fe6cf2d575a2",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "url": "={{ $json.output[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        900,
        280
      ],
      "id": "fae674b9-3244-43c1-aa31-5666ee45621c",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        880,
        40
      ],
      "id": "e89423fa-6c81-4b7a-b3da-47f24f56d075",
      "name": "Wait",
      "webhookId": "f8943ffb-8d97-4708-a0cb-75f8786314bb"
    },
    {
      "parameters": {
        "url": "=https://api.replicate.com/v1/predictions/{{ $('HTTP Request').item.json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1020,
        40
      ],
      "id": "6e56f775-cb3d-4709-8ff8-298d1a7fec3c",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "SSmCAhvQdJMVWSgd",
          "name": "Replicate Header"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "succeeded",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f70746c8-7fa4-4e93-ac0e-05869aab8cb1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "succeeded"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "68cf7268-35b5-4c07-b3ea-008c1dfbf28f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8a9a7829-f392-44ff-8fd5-ec7e26b445ac",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1160,
        40
      ],
      "id": "de86c58c-cf33-4f77-bee5-a178bf245e5c",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "getAll",
        "guildId": {
          "__rl": true,
          "value": "1362874778209489097",
          "mode": "list",
          "cachedResultName": "테스트서버",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097"
        },
        "channelId": {
          "__rl": true,
          "value": "1362874872266756137",
          "mode": "list",
          "cachedResultName": "이미지생성",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097/1362874872266756137"
        },
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        180,
        -180
      ],
      "id": "8ef99db3-3c48-41d8-94fa-6d2087fde11b",
      "name": "Discord",
      "webhookId": "b8e4d99b-bb8e-4b79-a554-835f0dd4e92d",
      "credentials": {
        "discordBotApi": {
          "id": "ln7XBsAuGcex2ZCt",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $json.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        340,
        -180
      ],
      "id": "c0e8e4d3-8e9c-43a8-8f05-2c3708662298",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "JZlK4sbXsHjCmFPI",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9cc8a451-33e1-4f7c-8745-687c38032550",
              "leftValue": "={{ $json.propertyName === null }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        500,
        -180
      ],
      "id": "7c0d6202-fa93-4498-aae9-0e90a8ec5cfb",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1362874778209489097",
          "mode": "list",
          "cachedResultName": "테스트서버",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097"
        },
        "channelId": {
          "__rl": true,
          "value": "1362874872266756137",
          "mode": "list",
          "cachedResultName": "이미지생성",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097/1362874872266756137"
        },
        "content": "={{ $json.data.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1200,
        280
      ],
      "id": "f8d5e06d-9f04-40cb-bb24-40c545b4eaf0",
      "name": "Discord1",
      "webhookId": "f28e5354-b604-418b-a90e-1c2b4e3ba188",
      "credentials": {
        "discordBotApi": {
          "id": "ln7XBsAuGcex2ZCt",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4aab9ba5-8313-4ed5-bc08-b6f3d3fae1a8",
              "leftValue": "={{ $json.output.result }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        500,
        40
      ],
      "id": "eeeaadf6-b3de-4449-bbd5-3b9d6bbb7f54",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Discord').item.json.id }}",
        "value": "={{ $('Discord').item.json.content }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        700,
        -200
      ],
      "id": "7e8b781b-d298-4869-8dff-5f7d8b3d954c",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "JZlK4sbXsHjCmFPI",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        20,
        -180
      ],
      "id": "8852cc7f-3c87-45aa-a919-dce867343f5e",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgbb.com/1/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "62b4ca079627cfabf3eca5a8a4b267dc"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1060,
        280
      ],
      "id": "d24e1845-81d6-46c2-9f48-454cc8dbcb90",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ecc771d6-a21f-4b7f-911c-a8fcd82acf65",
              "leftValue": "={{ $('AI Agent').item.json.output.movie_make }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1360,
        280
      ],
      "id": "32a4619c-9b78-42ab-86d6-9b0081f40b72",
      "name": "If2"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1700,
        0
      ],
      "id": "0d3697f1-8593-41a6-9ae3-258daa983b04",
      "name": "Wait1",
      "webhookId": "f8943ffb-8d97-4708-a0cb-75f8786314bb"
    },
    {
      "parameters": {
        "url": "=https://api.replicate.com/v1/predictions/{{ $('Movie API').item.json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1840,
        0
      ],
      "id": "43789c38-8f8e-4f49-abb8-2bc558c17d26",
      "name": "HTTP Request5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "SSmCAhvQdJMVWSgd",
          "name": "Replicate Header"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "succeeded",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f70746c8-7fa4-4e93-ac0e-05869aab8cb1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "succeeded"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "68cf7268-35b5-4c07-b3ea-008c1dfbf28f",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8a9a7829-f392-44ff-8fd5-ec7e26b445ac",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "failed",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "31c7e139-fe0c-40b4-adfd-950d4e9c29a9",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "starting",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "starting"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1980,
        0
      ],
      "id": "58adeb2f-9450-416b-ab9a-d94663329837",
      "name": "Switch1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/kwaivgi/kling-v1.6-standard/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"{{ $('AI Agent').item.json.output.movie_prompt }}\",\n      \"start_image\": \"{{ $('HTTP Request1').item.json.output[0] }}\",\n      \"duration\": 5,\n      \"cfg_scale\": 0.5,\n      \"aspect_ratio\": \"1:1\",\n      \"negative_prompt\": \"\"\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1540,
        0
      ],
      "id": "63faf8f2-fd52-4587-8917-ea94d9d75d89",
      "name": "Movie API",
      "credentials": {
        "httpHeaderAuth": {
          "id": "SSmCAhvQdJMVWSgd",
          "name": "Replicate Header"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1362874778209489097",
          "mode": "list",
          "cachedResultName": "테스트서버",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097"
        },
        "channelId": {
          "__rl": true,
          "value": "1362874872266756137",
          "mode": "list",
          "cachedResultName": "이미지생성",
          "cachedResultUrl": "https://discord.com/channels/1362874778209489097/1362874872266756137"
        },
        "content": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        2040,
        340
      ],
      "id": "e9ea12ef-d311-45c0-b7c5-762d103ca9aa",
      "name": "Discord2",
      "webhookId": "6fec137d-55f8-4bae-9d3f-18642aa0996d",
      "credentials": {
        "discordBotApi": {
          "id": "ln7XBsAuGcex2ZCt",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2260,
        20
      ],
      "id": "30c9acab-583c-4b56-a5c8-367d2cd7ae71",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cloudinary.com/v1_1/dwzwfwdse/video/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "upload_preset",
              "value": "ml_default"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        20
      ],
      "id": "9bf6168e-b0d7-484c-8ce7-f9282dc71ca4",
      "name": "HTTP Request6"
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Discord": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Discord1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Movie API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Movie API": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "main": [
        [
          {
            "node": "Discord2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "73714958-4ac0-4e74-b5e1-c6caa44d00b6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "Zopa5HkohSAFN6I2",
  "tags": []
}