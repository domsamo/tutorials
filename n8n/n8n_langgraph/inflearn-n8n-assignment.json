{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        -40
      ],
      "id": "3bf2be01-190f-4f41-9743-fccf707cac98",
      "name": "When chat message received",
      "webhookId": "c88a1e3a-a3d1-4932-986b-1f0a086614dd"
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are a helpful assistant that determines the most relevant document name based on the user's question.  Choose from the following document names: \n- delegation_of_authority \n- employee_benefits_and_welfare_faq \n- employee_benefits_and_welfare_guide \n- employee_handbook_and_hr_policy \n- expense_management_guide \n- it_support_guide \n- legal_and_compliance_policy  \n\nReturn ONLY the document name (e.g., 'it_support_guide').  \n\nExamples: \n- If the question is about who can approve expenses, return 'delegation_of_authority' or 'expense_management_guide' as appropriate. \n- If the question is about employee benefits, return 'employee_benefits_and_welfare_guide'. \n- If the question is about HR policies or the employee handbook, return 'employee_handbook_and_hr_policy'. \n- If the question is about IT support or technical issues, return 'it_support_guide'. \n- If the question is about legal or compliance matters, return 'legal_and_compliance_policy'. \n- If the question is a frequently asked question about benefits, return 'employee_benefits_and_welfare_faq'."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        220,
        -40
      ],
      "id": "f13d6720-585f-4958-b0b0-d92c7bf755b7",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        248,
        180
      ],
      "id": "9708f5ae-3614-4d24-9f08-a3bb5ce2eeee",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "7W4ncREiOY91DI9e",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"document\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        368,
        180
      ],
      "id": "931650fd-4fe9-48a2-b3c6-22ba14c56290",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        804,
        380
      ],
      "id": "44590b48-32db-4aeb-8ccf-7c3a9835bb66",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "7W4ncREiOY91DI9e",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        612,
        -40
      ],
      "id": "9bbe60cd-05a6-4cae-b8e3-7430208469ad",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "company_knowledge_base",
        "toolDescription": "Retrieve a list of documents that are relevant to the user's question by filtering the vector store with the document name",
        "pineconeIndex": {
          "__rl": true,
          "value": "inhouse-python-index",
          "mode": "list",
          "cachedResultName": "inhouse-python-index"
        },
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "filename",
                "value": "={{ $json.output.document }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.2,
      "position": [
        716,
        182.5
      ],
      "id": "94a28d87-4faf-4716-8207-9c24b85dd1c6",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "DD5wgit5kWJ4zHb8",
          "name": "PineconeApi account 2"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        596,
        180
      ],
      "id": "2cba15dd-ca8e-445d-a0b9-84c1f3c96831",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "7W4ncREiOY91DI9e",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f9171f0b-a7f9-405b-8854-9520f09df88e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1e4ec4640d6cca0d30d6549745eeb286bfe11a9106586118ad83c6032f39d7a3"
  },
  "id": "xWzCsyBzgVJ3Cdxz",
  "tags": []
}