{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -340,
        -80
      ],
      "id": "91dc87f3-959f-404a-a5af-1f47b7239f49",
      "name": "When chat message received",
      "webhookId": "edcf86cd-fc03-435e-862f-4e0903a589c4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').first().json.chatInput }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=DATABASE SCHEMA:\n{{ $json.schema }}\n\nLooking at the database schema above, convert a user's question into a SQL query to fetch data from the database. return the SQL query only "
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        320,
        -80
      ],
      "id": "f1024bf5-c6ac-48a2-b91e-14a0daf88612",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-2025-04-14"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        420,
        160
      ],
      "id": "b2d6dcd5-c20e-4287-b68e-0f666c7959d3",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "96yvOWGWa0cR3yGk",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.output.query }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        680,
        -80
      ],
      "id": "01d5aa95-ca9b-469e-9716-a8ded517193c",
      "name": "Execute a SQL query",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "QWnUbD61gdh6Jm8d",
          "name": "jasonkang14@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"query\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t\t\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        560,
        160
      ],
      "id": "f4797c10-f9cd-4bd1-8f60-73d50a0e337c",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=QUERY RESULT:\n{{ JSON.stringify($json) }}\n\nOriginal Question:  {{ $('When chat message received').first().json.chatInput }}",
        "messages": {
          "messageValues": [
            {
              "message": "Look at the query result and the user's question and return a user friendly message"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        900,
        -80
      ],
      "id": "f714128b-0579-49e7-b075-dd89c6995ff1",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1000,
        160
      ],
      "id": "e5dfb095-4b0a-4c32-90dd-26e8b829bf93",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "96yvOWGWa0cR3yGk",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    'CREATE TABLE ' || table_name || ' (' || E'\\n' ||\n    string_agg(\n        '    ' || column_name || ' ' || \n        CASE \n            WHEN data_type = 'character varying' THEN 'VARCHAR(' || character_maximum_length || ')'\n            WHEN data_type = 'integer' AND column_default LIKE 'nextval%' THEN 'SERIAL PRIMARY KEY'\n            WHEN data_type = 'numeric' THEN 'DECIMAL(' || numeric_precision || ',' || numeric_scale || ')'\n            WHEN data_type = 'timestamp without time zone' THEN 'TIMESTAMP'\n            WHEN data_type = 'boolean' THEN 'BOOLEAN'\n            ELSE UPPER(data_type)\n        END ||\n        CASE WHEN is_nullable = 'NO' AND column_default NOT LIKE 'nextval%' THEN ' NOT NULL' ELSE '' END ||\n        CASE WHEN column_default IS NOT NULL AND column_default NOT LIKE 'nextval%' \n             THEN ' DEFAULT ' || column_default ELSE '' END,\n        E',\\n' ORDER BY ordinal_position\n    ) || E'\\n' || ');' || E'\\n\\n' AS create_statement\nFROM information_schema.columns \nWHERE table_schema = 'public'\nGROUP BY table_name\nORDER BY table_name;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -120,
        -80
      ],
      "id": "96f98892-968d-4f1f-b2d7-32a5c98a93c2",
      "name": "Execute a SQL query1",
      "credentials": {
        "postgres": {
          "id": "zf20pLcO8Fj9JJj2",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let schema = ''\n\nfor (const item of $input.all()) {\n  schema += `${item.json.create_statement}\\n\\n`\n}\n\nreturn [{schema}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        100,
        -80
      ],
      "id": "0a32d445-40f9-47a7-ae9f-1805b8cc3ab9",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7a831bae-c87d-4151-b38d-5d7617a1ea56",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d8569e51104cfa451bd455a95dbfd98c913c0704d025656c6d11ba72aeb59663"
  },
  "id": "T5WP1NdLBjhIWuxh",
  "tags": []
}